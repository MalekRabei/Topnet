import React, { Fragment } from "react";
import {
  Button,
  Modal,
  Col,
  InputGroup,
  InputGroupAddon,
  InputGroupText,
  Input,
  FormGroup,
  Form
} from "reactstrap";
import classnames from "classnames";
import { updatePassword, getProfile } from "../services/userServices/authActions";
import { connect } from "react-redux";
import PropTypes from "prop-types";

import NotificationAlert from "react-notification-alert";
import NotificationAlertOptions from "./Alerts";

class ModalLayout extends React.Component {
  constructor() {
    super();
    this.state = {
      password: "",
      confirmPassword: ""
    };
    this.onChange = this.onChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);
  }
  componentDidMount()
  {
    this.props.getProfile()
    
  }
  onChange = e => {
    this.setState({ [e.target.name]: e.target.value });
    console.log("on update password ", this.state, "name input", e.target.name);
  };
  onSubmit(e) {
    e.preventDefault();

    if (this.state.password != this.state.confirmPassword) {
      this.refs.notify.notificationAlert(
        NotificationAlertOptions("danger", "Error", "Retype Password")
      );
      this.setState({
        password: "",
        confirmPassword: ""
      });
    } else {
      const password = this.state.password 
    let user = this.props.profile
    user.password = password
    this.props.updatePassword(user);

      console.log("password envoye ", user);
      this.refs.notify.notificationAlert(
        NotificationAlertOptions(
          "success",
          "Your Password is Updated"
        )
      );
      this.setState({
        password: "",
        confirmPassword: ""
      });
      this.toggleModal("defaultModal");
    }
  }

  state = {
    defaultModal: false,
    notificationModal: false,
    formModal: false,
    alert: null
  };

  toggleModal = state => {
    this.setState({
      [state]: !this.state[state]
    });
  };

  render() {
    if (this.props.isOpen)
      return (
        <Fragment>
          <NotificationAlert ref="notify" />
          <Button
            className="btn-neutral btn-icon"
            color="default"
            target="_blank"
            onClick={() => this.toggleModal("defaultModal")}
          >
            <span className="btn-inner--icon">
              <i className="fas fa-key mr-2" />
            </span>
            <span className="nav-link-inner--text">Update Password</span>
          </Button>

          <Modal
            className="modal-dialog-centered"
            isOpen={this.state.defaultModal}
            toggle={() => this.toggleModal("defaultModal")}
          >
            <Form role="form" onSubmit={this.onSubmit}>
              <div className="modal-header">
                <h6 className="modal-title" id="modal-title-default">
                  Updating Your Password
                </h6>
                <button
                  aria-label="Close"
                  className="close"
                  data-dismiss="modal"
                  type="button"
                  onClick={() => this.toggleModal("defaultModal")}
                >
                  <span aria-hidden={true}>Ã—</span>
                </button>
              </div>
              <div className="modal-body">
                <FormGroup>
                  <p>
                    The password generated by the administrator is
                    Topnet2020, so we suggest that you change your password
                    for the security of your session.
                  </p>
                </FormGroup>

                <FormGroup>
                  <Col md="10">
                    <InputGroup className={classnames("input-group-merge")}>
                      <InputGroupAddon addonType="prepend">
                        <InputGroupText>
                          <i className="fas fa-key" />
                        </InputGroupText>
                      </InputGroupAddon>
                      <Input
                        placeholder="Insert Password"
                        name="password"
                        type="password"
                        value={this.state.password}
                        onChange={this.onChange}
                      />
                    </InputGroup>
                  </Col>
                </FormGroup>

                <FormGroup>
                  <Col md="10">
                    <InputGroup className={classnames("input-group-merge")}>
                      <InputGroupAddon addonType="prepend">
                        <InputGroupText>
                          <i className="fas fa-key" />
                        </InputGroupText>
                      </InputGroupAddon>
                      <Input
                        placeholder="Retype Your Password"
                        name="confirmPassword"
                        type="password"
                        value={this.state.confirmPassword}
                        onChange={this.onChange}
                      />
                    </InputGroup>
                  </Col>
                </FormGroup>
              </div>
              <div className="modal-footer">
                <Button color="primary" type="submit">
                  Save changes
                </Button>

                <Button
                  className="ml-auto"
                  color="link"
                  data-dismiss="modal"
                  type="button"
                  onClick={() => this.toggleModal("defaultModal")}
                >
                  Close
                </Button>
              </div>
            </Form>
          </Modal>
        </Fragment>
      );
    else return <></>;
  }
}

ModalLayout.propTypes = {
  isOpen: PropTypes.bool,
  updatePassword: PropTypes.func,
  auth: PropTypes.object
};
const mapStateToProps = state => ({
  profile: state.auth.profile
});

export default connect(mapStateToProps, { updatePassword , getProfile})(ModalLayout);
